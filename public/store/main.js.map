{"version":3,"sources":["./apps/store/src/app/ngrx-store/app.reducer.ts","./apps/store/src/app/ngrx-store/cart.reducer.ts","./apps/store/src/app/billing-page/billing-page.component.ts","./apps/store/src/app/billing-page/billing-page.component.html","./apps/store/src/app/ngrx-store/collection.reducer.ts","./apps/store/src/app/material/material.module.ts","./apps/store/src/app/ngrx-store/books-facade.service.ts","./apps/store/src/main.ts","./apps/store/src/app/ngrx-store/cart.actions.ts","./apps/store/src/app/app-routing.module.ts","./apps/store/src/app/ngrx-store/collection.actions.ts","./apps/store/src/app/app.module.ts","./apps/store/src/environments/environment.ts","./apps/store/src/app/snak-bar/snak-bar.component.ts","./apps/store/src/app/snak-bar/snak-bar.component.html","./apps/store/src/app/app.component.ts","./apps/store/src/app/app.component.html","./apps/store/src/app/book-details/book-details.component.html","./apps/store/src/app/book-details/book-details.component.ts","./apps/store/src/app/search/search.component.ts","./apps/store/src/app/search/search.component.html","./apps/store/src/app/ngrx-store/cart.effects.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { ActionReducerMap } from '@ngrx/store';\r\nimport * as fromCart from './cart.reducer';\r\nimport * as fromCollection from './collection.reducer';\r\n\r\nexport interface AppState {\r\n  cart: fromCart.State;\r\n  collection: fromCollection.State;\r\n}\r\n\r\nexport const appReducer: ActionReducerMap<AppState> = {\r\n  cart: fromCart.cartReducer,\r\n  collection: fromCollection.collectionReducer,\r\n};\r\n","import { Book } from '../book.model';\r\nimport * as CartActions from './cart.actions';\r\n\r\nexport interface State {\r\n  cartItems: Book[];\r\n  isCart: boolean;\r\n  items: Book[];\r\n  searchWord: string;\r\n  selectedId: number;\r\n  recentSearchWords: string[];\r\n  book: Book;\r\n}\r\n\r\nexport const initialState: State = {\r\n  cartItems: [],\r\n  isCart: false,\r\n  items: [],\r\n  searchWord: '',\r\n  selectedId: -1,\r\n  recentSearchWords: [],\r\n  book: null,\r\n};\r\n\r\nexport function cartReducer(\r\n  state: State = initialState,\r\n  action: CartActions.CartActions | any\r\n): State {\r\n  switch (action.type) {\r\n    case CartActions.ADD_CARTITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: [...state.cartItems, action.payload],\r\n        isCart: false,\r\n      };\r\n    case CartActions.DELETE_CARTITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((book) => {\r\n          return book.id !== action.payload;\r\n        }),\r\n        isCart: false,\r\n      };\r\n    case CartActions.CLEAR_CART:\r\n      return {\r\n        ...state,\r\n        cartItems: [],\r\n        isCart: false,\r\n      };\r\n    case CartActions.IS_CART:\r\n      return {\r\n        ...state,\r\n        isCart: action.payload,\r\n      };\r\n    // case CartActions.GET_BOOKSBYNAME:\r\n    //   return {\r\n    //     ...state,\r\n    //     searchWord: action.payload,\r\n    //   };\r\n    case CartActions.ADD_BOOKS:\r\n      return {\r\n        ...state,\r\n        items: action.payload.books,\r\n      };\r\n    case CartActions.ADD_BOOK:\r\n      return {\r\n        ...state,\r\n        book: action.payload,\r\n      };\r\n    case CartActions.SELECTED_ID:\r\n      return {\r\n        ...state,\r\n        selectedId: action.payload,\r\n      };\r\n    case CartActions.RECENT_SEARCHWORDS:\r\n      const searchWord = action.payload.trim();\r\n      const searchWords = [...state.recentSearchWords, searchWord];\r\n\r\n      // Delete searchword if it already exists without changing last item which will be accessed in search comp\r\n      const index = searchWords.findIndex((value) => value === searchWord);\r\n      if (index !== searchWords.length - 1) {\r\n        searchWords.splice(index, 1);\r\n      }\r\n      return {\r\n        ...state,\r\n        recentSearchWords: [...searchWords],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Book } from '../book.model';\r\nimport { Collection } from '../collection.model';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { SnakBarComponent } from '../snak-bar/snak-bar.component';\r\nimport { BooksFacadeService } from '../../app/ngrx-store/books-facade.service';\r\n\r\n@Component({\r\n  selector: 'app-billing-page',\r\n  templateUrl: './billing-page.component.html',\r\n  styleUrls: ['./billing-page.component.css'],\r\n})\r\nexport class BillingPageComponent implements OnInit {\r\n  isValid = true;\r\n  books: Book[] = [];\r\n  collection: Collection;\r\n  isCart = false;\r\n  billingForm = this.fb.group({\r\n    name: ['', Validators.required],\r\n    email: ['', Validators.required],\r\n    phone: ['', Validators.required],\r\n    address: ['', Validators.required],\r\n  });\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private fb: FormBuilder,\r\n    private booksFacadeService: BooksFacadeService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.booksFacadeService.getAllCartItems$.subscribe(\r\n      (result) => (this.books = result)\r\n    );\r\n    this.booksFacadeService.isCart$.subscribe(\r\n      (isCart) => (this.isCart = isCart)\r\n    );\r\n  }\r\n  onSubmit(name: string, email: string, phone: number, address: string): void {\r\n    if (this.isCart) {\r\n      this.books.forEach((book) => {\r\n        this.collection = {\r\n          title: book?.title || '',\r\n          imgLink: book?.imageLink || '',\r\n          description: book?.description || '',\r\n          authors: book?.authors || '',\r\n          name: name || '',\r\n          email: email || '',\r\n          phone: phone || 0,\r\n          address: address || '',\r\n        };\r\n        this.booksFacadeService.addCollection(this.collection);\r\n      });\r\n      this.booksFacadeService.clearItems();\r\n    } else {\r\n      this.booksFacadeService.getBookInCollection$.subscribe((book) => {\r\n        this.collection = {\r\n          title: book?.title || '',\r\n          imgLink: book?.imageLink || '',\r\n          description: book?.description || '',\r\n          authors: book?.authors || '',\r\n          name: name || '',\r\n          email: email || '',\r\n          phone: phone || 0,\r\n          address: address || '',\r\n        };\r\n      });\r\n      this.booksFacadeService.addCollection(this.collection);\r\n    }\r\n    this.snackBar.openFromComponent(SnakBarComponent, {\r\n      duration: 2000,\r\n      panelClass: 'blue-snackbar',\r\n    });\r\n  }\r\n}\r\n","<form\r\n  id=\"billingForm\"\r\n  [formGroup]=\"billingForm\"\r\n  (ngSubmit)=\"\r\n    onSubmit(\r\n      billingForm.value.name,\r\n      billingForm.value.email,\r\n      billingForm.value.phone,\r\n      billingForm.value.address\r\n    )\r\n  \"\r\n>\r\n  <mat-label>Billing Info</mat-label>\r\n  <mat-form-field appearance=\"fill\">\r\n    <mat-label>Your name</mat-label>\r\n    <input matInput formControlName=\"name\" />\r\n    <mat-error *ngIf=\"billingForm.get('name').invalid\"\r\n      >Name is required.</mat-error\r\n    >\r\n  </mat-form-field>\r\n  <mat-form-field appearance=\"fill\">\r\n    <mat-label>Your email</mat-label>\r\n    <input\r\n      matInput\r\n      formControlName=\"email\"\r\n      placeholder=\"pk@example.com\"\r\n      required\r\n    />\r\n    <mat-error *ngIf=\"billingForm.get('email').invalid\"\r\n      >Email is required</mat-error\r\n    >\r\n  </mat-form-field>\r\n\r\n  <mat-form-field appearance=\"fill\">\r\n    <mat-label>Your phone number</mat-label>\r\n    <input matInput formControlName=\"phone\" />\r\n    <mat-error *ngIf=\"billingForm.get('phone').invalid\"\r\n      >Phone number is required</mat-error\r\n    >\r\n  </mat-form-field>\r\n  <mat-form-field appearance=\"fill\">\r\n    <mat-label>Your address</mat-label>\r\n    <textarea formControlName=\"address\" matInput></textarea>\r\n    <mat-error *ngIf=\"billingForm.get('address').invalid\"\r\n      >Address is required</mat-error\r\n    >\r\n  </mat-form-field>\r\n\r\n  <button\r\n    color=\"primary\"\r\n    mat-flat-button\r\n    [disabled]=\"\r\n      billingForm.get('name').invalid ||\r\n      billingForm.get('email').invalid ||\r\n      billingForm.get('phone').invalid ||\r\n      billingForm.get('address').invalid\r\n    \"\r\n  >\r\n    Submit\r\n  </button>\r\n</form>\r\n","import { Book } from '../book.model';\r\nimport { Collection } from '../collection.model';\r\nimport * as CollectionActions from './collection.actions';\r\n\r\nexport interface State {\r\n  collections: Collection[];\r\n}\r\n\r\nexport const initialState: State = {\r\n  collections: [],\r\n};\r\n\r\nexport function collectionReducer(\r\n  state: State = initialState,\r\n  action: CollectionActions.CollectionActions\r\n): State {\r\n  switch (action.type) {\r\n    case CollectionActions.ADD_COLLECTION:\r\n      return {\r\n        ...state,\r\n        collections: [...state.collections, action.payload],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\n\r\nconst materialComponents = [\r\n  MatButtonModule,\r\n  MatSidenavModule,\r\n  MatCardModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatToolbarModule,\r\n  MatIconModule,\r\n  MatBadgeModule,\r\n  MatSnackBarModule,\r\n  MatGridListModule,\r\n];\r\n\r\n@NgModule({\r\n  imports: [materialComponents],\r\n  exports: [materialComponents],\r\n})\r\nexport class MaterialModule {}\r\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\nimport * as fromApp from './app.reducer';\nimport * as cartActions from './cart.actions';\nimport * as collectionActions from './collection.actions';\nimport { Observable } from 'rxjs';\nimport { Book } from '../../app/book.model';\nimport { Collection } from '../../app/collection.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BooksFacadeService {\n  // Cart Store\n  getAllItems$ = this.store.select((state) => state.cart.items);\n  getAllCartItems$ = this.store.select((state) => state.cart.cartItems);\n  getSelectedItem$ = this.store.select(\n    (state) => state.cart.items[state.cart.selectedId]\n  );\n  isCart$ = this.store.select((state) => state.cart.isCart);\n  searchWord$ = this.store.select((state) => state.cart.searchWord);\n  getRecentSearWords$ = this.store.select(\n    (state) => state.cart.recentSearchWords\n  );\n  getBookInCollection$ = this.store.select((state) => state.cart.book);\n\n  // Collection store\n\n  getAllCollections$ = this.store.select(\n    (state) => state.collection.collections\n  );\n\n  constructor(private store: Store<fromApp.AppState>) {}\n\n  getBooksByName(search: string): void {\n    this.store.dispatch(new cartActions.RecentSearchWords(search));\n    this.store.dispatch(new cartActions.GetBooksByName(search));\n  }\n  setSelectedId(id: number): void {\n    this.store.dispatch(new cartActions.SelectedId(id));\n  }\n  addCartItem(book: Book): void {\n    this.store.dispatch(new cartActions.AddCartItem(book));\n  }\n  updateCart(flag: boolean): void {\n    this.store.dispatch(new cartActions.IsCart(flag));\n  }\n  deleteItem(id: string): void {\n    this.store.dispatch(new cartActions.DeletCartItem(id));\n  }\n  clearItems(): void {\n    this.store.dispatch(new cartActions.ClearCart());\n  }\n\n  // Collection API\n  addBook(book: Book): void {\n    this.store.dispatch(new cartActions.AddBook(book));\n  }\n  addCollection(collection: Collection): void {\n    this.store.dispatch(new collectionActions.AddCollection(collection));\n  }\n}\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import { Action } from '@ngrx/store';\r\nimport { Book } from '../book.model';\r\n\r\nexport const ADD_CARTITEM = '[Cart] ADD_CARTITEM';\r\nexport const DELETE_CARTITEM = '[Cart] DELETE_CARTITEM';\r\nexport const CLEAR_CART = '[Cart] CLEAR_CART';\r\nexport const IS_CART = '[Cart] IS_CART';\r\nexport const ADD_BOOKS = '[Cart] ADD_BOOKS';\r\nexport const ADD_BOOK = '[Cart] ADD_BOOK';\r\nexport const SELECTED_ID = '[Cart] SELECTED_ID';\r\nexport const RECENT_SEARCHWORDS = '[Cart] RECENT SEARCH WORDS';\r\n\r\n// Effects\r\nexport const GET_BOOKSBYNAME = '[Cart] GET_BOOKSBYNAME';\r\n\r\nexport class AddCartItem implements Action {\r\n  readonly type = ADD_CARTITEM;\r\n  constructor(public payload: Book) {}\r\n}\r\nexport class DeletCartItem implements Action {\r\n  readonly type = DELETE_CARTITEM;\r\n  constructor(public payload: string) {}\r\n}\r\nexport class ClearCart implements Action {\r\n  readonly type = CLEAR_CART;\r\n}\r\n\r\nexport class IsCart implements Action {\r\n  readonly type = IS_CART;\r\n  constructor(public payload: boolean) {}\r\n}\r\n\r\nexport class GetBooksByName implements Action {\r\n  readonly type = GET_BOOKSBYNAME;\r\n  constructor(public payload: string) {}\r\n}\r\nexport class AddBooks implements Action {\r\n  readonly type = ADD_BOOKS;\r\n  constructor(public payload: { books: Book[] }) {}\r\n}\r\nexport class SelectedId implements Action {\r\n  readonly type = SELECTED_ID;\r\n  constructor(public payload: number) {}\r\n}\r\nexport class RecentSearchWords implements Action {\r\n  readonly type = RECENT_SEARCHWORDS;\r\n  constructor(public payload: string) {}\r\n}\r\nexport class AddBook implements Action {\r\n  readonly type = ADD_BOOK;\r\n  constructor(public payload: Book) {}\r\n}\r\n\r\nexport type CartActions =\r\n  | AddCartItem\r\n  | DeletCartItem\r\n  | ClearCart\r\n  | IsCart\r\n  | GetBooksByName\r\n  | AddBooks\r\n  | AddBook\r\n  | SelectedId\r\n  | RecentSearchWords;\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { BillingPageComponent } from './billing-page/billing-page.component';\r\nimport { BookDetailsComponent } from './book-details/book-details.component';\r\nimport { SearchComponent } from './search/search.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'search', component: SearchComponent },\r\n  {\r\n    path: 'cart',\r\n    loadChildren: () =>\r\n      import('./carts/carts.module').then((m) => m.CartsModule),\r\n  },\r\n  {\r\n    path: 'mycollection',\r\n    loadChildren: () =>\r\n      import('./mycollections/mycollections.module').then(\r\n        (m) => m.MycollectionsModule\r\n      ),\r\n  },\r\n  { path: 'bookdetails', component: BookDetailsComponent },\r\n  { path: 'billingpage', component: BillingPageComponent },\r\n  { path: '', redirectTo: '/search', pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\nexport const routingComponents = [SearchComponent, BillingPageComponent];\r\n","import { Action } from '@ngrx/store';\r\nimport { Collection } from '../collection.model';\r\n\r\nexport const ADD_COLLECTION = 'ADD_COLLECTION';\r\n\r\nexport class AddCollection implements Action {\r\n  readonly type = ADD_COLLECTION;\r\n  constructor(public payload: Collection) {}\r\n}\r\nexport type CollectionActions = AddCollection | any;\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from './material/material.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BookDetailsComponent } from './book-details/book-details.component';\r\nimport { BillingPageComponent } from './billing-page/billing-page.component';\r\nimport { SnakBarComponent } from './snak-bar/snak-bar.component';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\n\r\nimport * as fromApp from './../app/ngrx-store/app.reducer';\r\nimport { CartEffects } from './ngrx-store/cart.effects';\r\nimport { BooksFacadeService } from './../app/ngrx-store/books-facade.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    routingComponents,\r\n    BookDetailsComponent,\r\n    BillingPageComponent,\r\n    SnakBarComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    StoreModule.forRoot(fromApp.appReducer),\r\n    EffectsModule.forRoot([CartEffects]),\r\n  ],\r\n  providers: [BooksFacadeService],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-snak-bar',\r\n  templateUrl: './snak-bar.component.html',\r\n  styleUrls: ['./snak-bar.component.css'],\r\n})\r\nexport class SnakBarComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<p>Purchase is successful</p>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\nimport { BooksFacadeService } from '../app/ngrx-store/books-facade.service';\r\nimport { Book } from './book.model';\r\nimport { Collection } from './collection.model';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  opened = true;\r\n  title = 'store';\r\n  items$: Observable<Book[]>;\r\n  collections$: Observable<Collection[]>;\r\n\r\n  constructor(private booksFacadeService: BooksFacadeService) {}\r\n  ngOnInit(): void {\r\n    this.items$ = this.booksFacadeService.getAllCartItems$;\r\n    this.collections$ = this.booksFacadeService.getAllCollections$;\r\n  }\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n  <button\r\n    mat-icon-button\r\n    class=\"example-icon\"\r\n    aria-label=\"Example icon-button with menu icon\"\r\n  >\r\n    <mat-icon (click)=\"opened = !opened\">menu</mat-icon>\r\n  </button>\r\n  <span class=\"main-title\">My App</span>\r\n  <span class=\"example-spacer\"></span>\r\n</mat-toolbar>\r\n\r\n<mat-sidenav-container>\r\n  <mat-sidenav mode=\"side\" [(opened)]=\"opened\">\r\n    <div routerLink=\"/search\" routerLinkActive=\"active\">\r\n      <mat-icon>search</mat-icon> Search\r\n    </div>\r\n    <br />\r\n    <div routerLink=\"/cart\">\r\n      <mat-icon\r\n        [matBadgeHidden]=\"!(items$ | async).length\"\r\n        [matBadge]=\"(items$ | async).length\"\r\n        matBadgeColor=\"warn\"\r\n        matBadgePosition=\"above before\"\r\n        >shopping_cart</mat-icon\r\n      >Cart\r\n    </div>\r\n\r\n    <br />\r\n    <div routerLink=\"/mycollection\">\r\n      <mat-icon\r\n        [matBadgeHidden]=\"!(collections$ | async).length\"\r\n        [matBadge]=\"(collections$ | async).length\"\r\n        matBadgeColor=\"warn\"\r\n        matBadgePosition=\"above before\"\r\n        >library_books</mat-icon\r\n      >\r\n      My Collection\r\n    </div>\r\n  </mat-sidenav>\r\n\r\n  <mat-sidenav-container>\r\n    <router-outlet></router-outlet>\r\n  </mat-sidenav-container>\r\n</mat-sidenav-container>\r\n","<mat-card *ngIf=\"bookDetails$ | async as bookDetails\">\r\n  <mat-card-title>\r\n    {{ bookDetails.title }}\r\n    <img [src]=\"bookDetails.imageLink\" />\r\n  </mat-card-title>\r\n  <mat-card-content>\r\n    <div class=\"rating\">Rating : {{ bookDetails.ratingsCount }}</div>\r\n    <div class=\"publisher\">Publisher : {{ bookDetails.publisher }}</div>\r\n    <div class=\"pageCount\">Page Count : {{ bookDetails.pageCount }}</div>\r\n    <div class=\"Language\">Language : {{ bookDetails.language }}</div>\r\n    <div class=\"description\">\r\n      {{ bookDetails.description }}\r\n    </div>\r\n    <div class=\"written\">Written By {{ bookDetails.authors }}</div>\r\n  </mat-card-content>\r\n  <mat-card-actions>\r\n    <button color=\"primary\" mat-flat-button (click)=\"addToCart()\">\r\n      Add to Card\r\n    </button>\r\n    <button color=\"primary\" mat-flat-button (click)=\"buyNow()\">Buy Now</button>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { Book } from '../book.model';\r\nimport { BooksFacadeService } from '../../app/ngrx-store/books-facade.service';\r\n\r\n@Component({\r\n  selector: 'app-book-details',\r\n  templateUrl: './book-details.component.html',\r\n  styleUrls: ['./book-details.component.css'],\r\n})\r\nexport class BookDetailsComponent implements OnInit {\r\n  id: string;\r\n  book: Book;\r\n  bookDetails$: Observable<Book>;\r\n\r\n  subscriptions: Subscription[] = [];\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private booksFacadeService: BooksFacadeService\r\n  ) {}\r\n  ngOnInit(): void {\r\n    this.bookDetails$ = this.booksFacadeService.getSelectedItem$;\r\n    this.bookDetails$.subscribe((result) => {\r\n      this.book = result;\r\n    });\r\n  }\r\n  addToCart(): void {\r\n    this.booksFacadeService.addCartItem(this.book);\r\n  }\r\n  buyNow(): void {\r\n    this.booksFacadeService.addBook(this.book);\r\n    this.router.navigate(['/billingpage']);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, NgForm, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Book } from '../book.model';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { BooksFacadeService } from '../../app/ngrx-store/books-facade.service';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css'],\r\n})\r\nexport class SearchComponent implements OnInit {\r\n  searchWord = '';\r\n  items$: Observable<Book[]>;\r\n  subscriptions: Subscription[] = [];\r\n  searchForm = this.fb.group({\r\n    searchWord: ['', Validators.required],\r\n  });\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private booksFacadeService: BooksFacadeService\r\n  ) {\r\n    this.items$ = this.booksFacadeService.getAllItems$;\r\n  }\r\n  ngOnInit(): void {\r\n    this.booksFacadeService.getRecentSearWords$.subscribe(\r\n      (recentSearchWords) => {\r\n        this.searchWord = recentSearchWords[recentSearchWords.length - 1] || '';\r\n        this.searchForm.patchValue({ searchWord: this.searchWord });\r\n      }\r\n    );\r\n    if (this.searchWord !== '') {\r\n      this.booksFacadeService.getBooksByName(this.searchWord);\r\n    }\r\n  }\r\n  onSubmit(): void {\r\n    this.booksFacadeService.getBooksByName(\r\n      this.searchForm.controls.searchWord.value\r\n    );\r\n  }\r\n  getBookDetails(id: string): void {\r\n    this.booksFacadeService.setSelectedId(parseInt(id, 10));\r\n    this.router.navigate(['/bookdetails']);\r\n  }\r\n}\r\n","<form id=\"searchForm\" [formGroup]=\"searchForm\" (ngSubmit)=\"onSubmit()\">\r\n  <mat-form-field>\r\n    <mat-label>Search in Library</mat-label>\r\n    <input matInput formControlName=\"searchWord\" />\r\n  </mat-form-field>\r\n  <span (click)=\"onSubmit()\" class=\"material-icons searchicon\">search </span>\r\n</form>\r\n<mat-grid-list cols=\"2\" rowHeight=\"2:1\">\r\n  <mat-grid-tile *ngFor=\"let item of items$ | async; let i = index\">\r\n    <mat-card (click)=\"getBookDetails(i)\">\r\n      <mat-card-title>\r\n        {{ item.title }}\r\n        <img [src]=\"item.imageLink\" />\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <div class=\"description\">\r\n          {{ item.description }}\r\n        </div>\r\n        <div class=\"written\">Written By {{ item.authors }}</div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </mat-grid-tile>\r\n</mat-grid-list>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { createEffect, EffectsFeatureModule, ofType } from '@ngrx/effects';\r\nimport { Effect } from '@ngrx/effects';\r\nimport { Actions } from '@ngrx/effects';\r\nimport { of } from 'rxjs';\r\nimport { catchError, map, switchMap } from 'rxjs/operators';\r\n\r\nimport * as cartActions from '../ngrx-store/cart.actions';\r\nimport * as fromCart from '../ngrx-store/cart.reducer';\r\n\r\nexport interface Book {\r\n  id: string;\r\n  title: string;\r\n  imageLink: string;\r\n  description: string;\r\n  authors: string;\r\n\r\n  ratingsCount: string;\r\n  publisher: string;\r\n  pageCount: string;\r\n  language: string;\r\n}\r\n\r\n@Injectable()\r\nexport class CartEffects {\r\n  getBooksByName$ = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(cartActions.GET_BOOKSBYNAME),\r\n      switchMap((bookData: cartActions.GetBooksByName) => {\r\n        return this.httpClient\r\n          .get<Book[]>('http://localhost:3000/api/books/' + bookData.payload)\r\n          .pipe(\r\n            map((res: any) => {\r\n              const books = res || [];\r\n              return new cartActions.AddBooks({ books });\r\n            }),\r\n            catchError((errorRes) => {\r\n              return of(errorRes);\r\n            })\r\n          );\r\n      })\r\n    );\r\n  });\r\n  constructor(private actions$: Actions, private httpClient: HttpClient) {}\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}